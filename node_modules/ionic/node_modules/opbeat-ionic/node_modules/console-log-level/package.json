{
  "name": "console-log-level",
  "version": "1.1.2",
  "description": "The most simple logger imaginable",
  "main": "index.js",
  "scripts": {
    "test": "standard && tape test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/watson/console-log-level.git"
  },
  "keywords": [
    "log",
    "logging",
    "logger",
    "console",
    "console.log",
    "stdout",
    "stderr"
  ],
  "author": {
    "name": "Thomas Watson Steen",
    "email": "w@tson.dk"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/watson/console-log-level/issues"
  },
  "homepage": "https://github.com/watson/console-log-level",
  "dependencies": {},
  "devDependencies": {
    "standard": "^5.2.2",
    "tape": "^3.0.3"
  },
  "coordinates": [
    55.687724,
    12.5956242
  ],
  "readme": "# console-log-level\n\nA dead simple logger. Will log to STDOUT or STDERR depending on the\nchosen log level. It uses `console.info`, `console.warn` and\n`console.error` and hence supports the same API.\n\nLog levels supported: debug, info, warn, error and fatal.\n\n[![Build status](https://travis-ci.org/watson/console-log-level.svg?branch=master)](https://travis-ci.org/watson/console-log-level)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)\n\n## Installation\n\n```\nnpm install console-log-level\n```\n\n## Example usage\n\n```js\nvar log = require('console-log-level')({ level: 'info' })\n\nlog.debug('a') // will not do anything\nlog.info('b')  // will output 'b\\n' on STDOUT\nlog.warn('c')  // will output 'c\\n' on STDERR\nlog.error('d') // will output 'd\\n' on STDERR\nlog.fatal('e') // will output 'e\\n' on STDERR\n```\n\n## Options\n\nConfigure the logger by passing an options object:\n\n```js\nvar log = require('console-log-level')({\n  prefix: function () { return new Date().toISOString() },\n  level: 'info'\n})\n```\n\n### level\n\nA `string` to specify the log level. Defaults to `info`.\n\n### prefix\n\nSpecify this option if you want to set a prefix for all log messages.\nThis must be a `string` or a `function` that returns a string.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "console-log-level@1.1.2",
  "_shasum": "dde00293efa3cea79cd342c47c4785262316c3ba",
  "_resolved": "https://registry.npmjs.org/console-log-level/-/console-log-level-1.1.2.tgz",
  "_from": "https://registry.npmjs.org/console-log-level/-/console-log-level-1.1.2.tgz"
}
